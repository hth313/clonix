; Block for reading Address from DATA and ISA line, and send it to serial RAM (WR CYCLE)
;
; ---- General HP-41 clock timing Phi1 and Phi2 (@360KHz nominal)
;
;                 |<---- Phase N ---->|
; Phi1 __/¯\_________________/¯\___________
;        |<-1.04->|<-1.73us->|      ->| |<- 0.7us
;        |  11ins |   19ins  |        | |   8ins
; Phi2 ___________/¯\_________________/¯\____
;        |<----- 2.77us----->| (1/360·10^3)
;        |       33ins       |
;
; PIC Clock is set to 48MHz, this gives an instruction rate of 12MIPS.
; Therefore intruction cycle is 1/12·10^6 = 83.33ns (83.33·10^-9)
;
; According to this, the number of PIC instruction cycles between two consecutive
; Phi phases is 2.77·10^-6/83.33·10^-9 = 33.33 intructions.
; HP-41 clock is generated by an LC resonant circuit which is not renowned by its
; accuracy. HP specs refers to an "allowed" deviation of +/- 20KHz.
; Thus, in the worst case, a Phi clock of 380KHz may be found, which leads to a gap
; of 31.5 instructions between Phi pulses.
; In this implementation we use a maximum of 30 instructions.
;
; The RAM serial interface sequence will look like this (Address write portion):
;Phi# |    14   |    15   |    16   |    17   |    18   |    19   |    20   |    21   |    22   |    23   |    24   |    25   |    26   |    27   |    28   |    29   |    30  |
;CLK __/¯¯¯¯¯¯\__/¯\__/¯\__/¯\__/¯\__/¯\__/¯\__/¯\__/¯\__/¯\__/¯\__/¯\__/¯\__/¯\__/¯\__/¯\__/¯\__/¯\__/¯\__/¯\__/¯\_______/¯\_______/¯\_______/¯\_______/¯\__/¯\__/¯\_______/¯\_
;
;DAT ___/¯¯¯¯\__/¯¯¯\_____/¯¯¯\____________________________________XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX_____XXXXXXXXXX_____XXXXX_____XXXXX_____XXXXX_____XXXXXXXXXX_______________
;       ^    ^    ^    ^    ^    ^    ^    ^    ^    ^    ^    ^    ^    ^    ^    ^    ^    ^    ^    ^    ^    ^         ^         ^         ^         ^    ^    ^         ^
;     STOP START  1    0    1    0    0    0    0    0   ACK  "0"  AL0  AL1  AL2  AL3  AL4  AL5  AL6   ACK AL7  AH0       AH1       AH2       AH3       AH4  AH5  "0"       ACK
;                |----SLAVE ID----|  |-DEVICE AD-| WRITE     | a15 a14  a13  a12  a11  a10  a09  a08       a07  a06       a05       a04       a03       a02  a01  a00   See NOTE
; NOTE: The address sent to the RAM is obtained from ISA or DATA depending if it's a WRITE s&x or not.
;       After the last ACK on pulse #30 we'll check if the received address is in our RAM and if it's a WRITE CYCLE, see the rest of the timing chart for Data Write in Phase #30
;
; This is ver 08r for NoV-64 (32K) + RAM2ROM4.

        wtre    NUTPHI1         ; 14
;--------------------------------------------------------------------- 18 instructions
        btfsc   NUTDATA
        bsf     adrlw,0         ; Read DATA line address low, bit 0

        clrf    FSR0L
        bsf     FSR0L,6         ; Points to Low Address ISA
        btfsc   adrsource,0     ; Selects address form ISA...
        bsf     FSR0L,2         ; ... or from DATA

        bsf     RAMCLK          ; Set SCL high
        nop                     ; CLK ___/¯¯¯¯¯¯
        nop
        bsf     RAMDAT          ; Set SDT high (STOP condition)
        call    s4nop           ; DAT _______/¯¯
        bcf     RAMDAT          ; SDT to "0" (Start sequence)
        nop                     ; DAT ¯\________
        nop
        bcf     RAMCLK          ; Sets SCL low
                                ; CLK ¯¯¯¯¯¯\___

        wthi    NUTPHI1         ; 15
;--------------------------------------------------------------------- 24 instructions
        btfsc   NUTDATA
        bsf     adrlw,1         ; Read DATA line address low, bit 1

        bsf     RAMDAT          ; SDT to "1" (Start slave address "B'10100000")
        call    ferclk
;-------------------
        bcf     RAMDAT          ; SDT to "0" (Slave address "B'10100000" 2nd bit)
        call    ferclk

        wthi    NUTPHI1         ; 16
;---------------------------------------------------------------------- 26 instructions
        btfsc   NUTDATA
        bsf     adrlw,2         ; Read DATA line address low, bit 2

        bsf     RAMDAT          ; SDT to "1" (Slave address "B'10100000" 3rd bit)
        btfsc   NUTISA
        bsf     addrl,0         ; Read ISA line address low, bit 0
        call    ferclk
;-------------------
        bcf     RAMDAT          ; SDT to "0" (Slave address "B'10100000" 4th bit)
        call    ferclk

        wthi    NUTPHI1         ; 17
;---------------------------------------------------------------------- 26 instructions
        btfsc   NUTDATA
        bsf     adrlw,3         ; Read DATA line address low, bit 3

        bcf     RAMDAT          ; SDT to "0" (Slave address "B'10100000" 5th bit)
        btfsc   NUTISA
        bsf     addrl,1         ; Read ISA line address low, bit 1
        call    ferclk
;-------------------
        bcf     RAMDAT          ; SDT to "0" (Slave address "B'10100000" 6th bit)
        call    ferclk

        wthi    NUTPHI1         ; 18
;---------------------------------------------------------------------- 26 instructions
        btfsc   NUTDATA
        bsf     adrlw,4         ; Read DATA line address low, bit 4

        bcf     RAMDAT          ; SDT to "0" (Slave address "B'10100000" 7th bit)
        btfsc   NUTISA
        bsf     addrl,2         ; Read ISA line address low, bit 2
        call    ferclk
;-------------------
        bcf     RAMDAT          ; SDT to "0" (Slave address "B'10100000" 8th bit)
        call    ferclk

        wthi    NUTPHI1         ; 19
;---------------------------------------------------------------------- 25 instructions
        btfsc   NUTDATA
        bsf     adrlw,5         ; Read DATA line address low, bit 5

        btfsc   NUTISA
        bsf     addrl,3         ; Read ISA line address low, bit 3

        bsf     DATDIR          ; Set RAMDAT as Input for ACK
        call    ferclk
        bcf     DATDIR          ; Set RAMDAT as output again.
;-------------------
        bcf     RAMDAT          ; SDT to "0", first Address to RAM (A15) always "0"
        nop
        nop
        bsf     RAMCLK
        call    s4nop
        bcf     RAMCLK

        wthi    NUTPHI1         ; 20
;----------------------------------------------------------------------  26 instructions
        btfsc   NUTDATA
        bsf     adrlw,6         ; Read DATA line address low, bit 6

        btfsc   NUTISA
        bsf     addrl,4         ; Read ISA line address low, bit 4

        bcf     RAMDAT
        btfsc   INDF0,0
        bsf     RAMDAT          ; Write SDT to address L,0 sent as A14
        nop
        bsf     RAMCLK
        call    s4nop
        bcf     RAMCLK
;-------------------
        bcf     RAMDAT
        btfsc   INDF0,1
        bsf     RAMDAT          ; Write SDT to address L,1 sent as A13
        nop
        nop
        nop
        bsf     RAMCLK
        call    s4nop
        bcf     RAMCLK

        wthi    NUTPHI1         ; 21
;---------------------------------------------------------------------- 26 instructions
        btfsc   NUTDATA
        bsf     adrlw,7         ; Read DATA line address low, bit 7

        btfsc   NUTISA
        bsf     addrl,5         ; Read ISA line address low, bit 5

        bcf     RAMDAT
        btfsc   INDF0,2
        bsf     RAMDAT          ; Write SDT to address L,2 sent as A12
        nop
        bsf     RAMCLK
        call    s4nop
        bcf     RAMCLK
;-------------------
        bcf     RAMDAT
        btfsc   INDF0,3
        bsf     RAMDAT          ; Write SDT to address L,3 sent as A11
        nop
        nop
        nop
        bsf     RAMCLK
        call    s4nop
        bcf     RAMCLK

        wthi    NUTPHI1         ; 22
;--------------------------------------------------------------------- 26 instructions
        btfsc   NUTDATA
        bsf     adrhg,0         ; Read DATA line address high, bit 0

        btfsc   NUTISA
        bsf     addrl,6         ; Read ISA line address low, bit 6

        bcf     RAMDAT
        btfsc   INDF0,4
        bsf     RAMDAT          ; Write SDT to address L,4 sent as A10
        nop
        bsf     RAMCLK
        call    s4nop
        bcf     RAMCLK
;-------------------
        bcf     RAMDAT
        btfsc   INDF0,5
        bsf     RAMDAT          ; Write SDT to address L,5 sent as A9
        nop
        nop
        nop
        bsf     RAMCLK
        call    s4nop
        bcf     RAMCLK

        wthi    NUTPHI1         ; 23
;--------------------------------------------------------------------- 26 instructions
        btfsc   NUTDATA
        bsf     adrhg,1         ; Read DATA line address high, bit 1

        btfsc   NUTISA
        bsf     addrl,7         ; Read ISA line address low, bit 7

        bcf     RAMDAT
        btfsc   INDF0,6
        bsf     RAMDAT          ; Write SDT to address L,6 sent as A8
        nop
        bsf     RAMCLK
        call    s4nop
        bcf     RAMCLK
;-------------------
        bsf     DATDIR          ; Set RAMDAT as Input for ACK
        call    s5nop
        bsf     RAMCLK
        call    s4nop
        bcf     RAMCLK

        wthi    NUTPHI1         ; 24
;--------------------------------------------------------------------- 27 instructions
        btfsc   NUTDATA
        bsf     adrhg,2         ; Read DATA line address high, bit 2

        btfsc   NUTISA
        bsf     addru,0         ; Read ISA line address high, bit 0

        bcf     DATDIR          ; Set RAMDAT as output again.
        bcf     RAMDAT
        btfsc   INDF0,7
        bsf     RAMDAT          ; Write SDT to address L,7 sent as A7
        incf    FSR0L           ; Points to high address
        bsf     RAMCLK
        call    s4nop
        bcf     RAMCLK
;-------------------
        bcf     RAMDAT
        btfsc   INDF0,0
        bsf     RAMDAT          ; Write SDT to address H,0 sent as A6
        nop
        nop
        nop
        bsf     RAMCLK
        call    s4nop
        bcf     RAMCLK

        wthi    NUTPHI1         ; 25
;--------------------------------------------------------------------- 14 instructions
        btfsc   NUTDATA
        bsf     adrhg,3         ; Read DATA line address high, bit 3

        btfsc   NUTISA
        bsf     addru,1         ; Read ISA line address high, bit 1

        bcf     RAMDAT
        btfsc   INDF0,1
        bsf     RAMDAT          ; Write SDT to address H,1 sent as A5
        nop
        bsf     RAMCLK
        call    s4nop
        bcf     RAMCLK

        wthi    NUTPHI1         ; 26
;--------------------------------------------------------------------- 14 instructions
        btfsc   NUTDATA
        bsf     adrhg,4         ; Read DATA line address high, bit 4

        btfsc   NUTISA
        bsf     addru,2         ; Read ISA line address high, bit 2

        bcf     RAMDAT
        btfsc   INDF0,2
        bsf     RAMDAT          ; Write SDT to address H,2 sent as A4
        nop
        bsf     RAMCLK
        call    s4nop
        bcf     RAMCLK

        wthi    NUTPHI1         ; 27
;--------------------------------------------------------------------- 14 instructions
        btfsc   NUTDATA
        bsf     adrhg,5         ; Read DATA line address high, bit 5

        btfsc   NUTISA
        bsf     addru,3         ; Read ISA line address high, bit 3

        bcf     RAMDAT
        btfsc   INDF0,3
        bsf     RAMDAT          ; Write SDT to address H,3 sent as A3
        nop
        bsf     RAMCLK
        call    s4nop
        bcf     RAMCLK

        clrf    ramchipL
        clrf    ramchipH

        wthi    NUTPHI1         ; 28
;--------------------------------------------------------------------- 23 instructions
        btfsc   NUTDATA
        bsf     adrhg,6         ; Read DATA line address high, bit 6

        btfsc   NUTISA
        bsf     addru,4         ; Read ISA line address high, bit 4

        bcf     RAMDAT
        btfsc   INDF0,4
        bsf     RAMDAT          ; Write SDT to address H,4 sent as A2
        movf    RAMmode,W       ; Now we know AddressH,4 (page odd or even)
        bsf     RAMCLK
        bz      RAMAA           ; Proceed with RAM memory mapping
        decf    WREG
        bz      RAMBA
        decf    WREG
        bz      RAMAB
RAMBB
        bsf     ramchipH,5
        bsf     ramchipL,3
        bra     endrammode
RAMAB
        btfsc   INDF0,4
        bra     RAMBB
        bra     RAMAA
RAMBA
        btfss   INDF0,4
        bra     RAMBB
RAMAA
        bsf     ramchipH,4
        bsf     ramchipL,2

endrammode
        bcf     RAMCLK

        wthi    NUTPHI1         ; 29
;--------------------------------------------------------------------- 27 instructions
        btfsc   NUTDATA
        bsf     adrhg,7         ; Read DATA line address high, bit 7

        btfsc   NUTISA
        bsf     addru,5         ; Read ISA line address high, bit 5

        bcf     RAMDAT
        btfsc   INDF0,5
        bsf     RAMDAT          ; Write SDT to address H,5 sent as A1
        nop
        bsf     RAMCLK
        call    s4nop
        bcf     RAMCLK
;-------------------
        nop
        bcf     RAMDAT          ; SDT to "0", last Address to RAM (A0) always "0"
        call    s4nop
        bsf     RAMCLK
        call    s4nop
        bcf     RAMCLK

        wthi    NUTPHI1         ; 30
;--------------------------------------------------------------------- 24/25 instructions
        btfsc   NUTISA
        bsf     addru,6         ; Read ISA line address high, bit 6

        btfss   adrsource,0     ; If itsn't a RAM write...
        goto    memrd           ; it may be a RAM/ROM read

        movf    adrhg,W         ; It is a RAM WRITE CYCLE
        andlw   0xF0            ; use the upper four bits ...
        swapf   WREG
        movwf   FSR0L           ; as a pointer to the map table
        btfss   INDF0,0         ; If map is B'XXXXXXX1 then is our RAM
        bra     notouram
        btfss   INDF0,1         ; Write protection flag, if B'XXXXXX1X it's protected
        bra     ouramwr         ; If it's not protected then proceed with RAM Write.

notouram                        ; Sends a STOP sequence.

        wthi    NUTPHI1         ; 31'
;-------------------------------------------------------------------------------
        bcf     RAMDAT
        btfsc   NUTISA
        bsf     addru,7         ; Read ISA line address high, bit 7
        bsf     RAMCLK          ; SCL to "1" (Must be kept for 5 cycles)
        call    s4nop
        bsf     RAMDAT          ; 4 (STOP)
        nop                     ; and 5, go down...
        nop
        bcf     RAMCLK
        nop
        bcf     RAMDAT          ; 14 intructions

        goto    checkrom

;------------------------------------------------------------------------------
; RAM writting procedure

ouramwr

;******* Switches OFF the unwanted RAM CHIP****
        movf    ramchipH,W
        btfss   adrhg,6
        movf    ramchipL,W
        movwf   PORTA
;**********************************************

        wtre    NUTPHI1         ; 31
;-------------------------------------------------------------------------------
        btfsc   NUTISA
        bsf     addru,7         ; ISA line address high, bit 7

        bsf     DATDIR          ; Set RAMDAT as Input for ACK
        call    ferclk
        bcf     DATDIR          ; Set RAMDAT as output again.
;------------------- 14
        bcf     RAMDAT
        btfsc   dtl8,0
        bsf     RAMDAT          ; SDT to dtl8,0
        call    ferclk
;------------------- 27
        bcf     RAMDAT
        btfsc   dtl8,1
        bsf     RAMDAT          ; SDT to dtl8,1
        call    ferclk
;------------------- 40
        bcf     RAMDAT
        btfsc   dtl8,2
        bsf     RAMDAT          ; SDT to dtl8,2
        call    ferclk
;------------------- 53
        bcf     RAMDAT
        btfsc   dtl8,3
        bsf     RAMDAT          ; SDT to dtl8,3
        call    ferclk
;------------------- 66
        bcf     RAMDAT
        btfsc   dtl8,4
        bsf     RAMDAT          ; SDT to dtl8,4
        call    ferclk
;------------------- 79
        bcf     RAMDAT
        btfsc   dtl8,5
        bsf     RAMDAT          ; SDT to dtl8,5
        call    ferclk
;------------------- 92
        bcf     RAMDAT
        btfsc   dtl8,6
        bsf     RAMDAT          ; SDT to dtl8,6
        call    ferclk
;------------------- 105
        bcf     RAMDAT
        btfsc   dtl8,7
        bsf     RAMDAT          ; SDT to dtl8,7
        call    ferclk
        bcf     RAMDAT
        nop
;------------------- 120

        wtre    NUTPHI1         ; 35
;-------------------------------------------------------------------------------
        bsf     DATDIR          ; Set RAMDAT as Input for ACK
        call    ferclk
        bcf     DATDIR          ; Set RAMDAT as output again.
;------------------- 12
        bcf     RAMDAT
        btfsc   dth2,0
        bsf     RAMDAT          ; SDT to dth2,0
        call    ferclk
;------------------- 25
        bcf     RAMDAT
        btfsc   dth2,1
        bsf     RAMDAT          ; SDT to dth2,1
        call    ferclk
;------------------- 38
        nop
        bcf     RAMDAT          ; Set dth2,2 to dth2,7 = "0"
        call    ferclk          ; dht2,2
;------------------- 50
        nop
        nop
        call    ferclk          ; dth2,3
;------------------- 62
        nop
        nop
        call    ferclk          ; dth2,4
;------------------- 74
        nop
        nop
        call    ferclk          ; dth2,5
;------------------- 86
        nop
        nop
        call    ferclk          ; dth2,6
;------------------- 98
        nop
        nop
        call    ferclk          ; dth2,7
;------------------- 110
        nop
        bsf     DATDIR          ; Set RAMDAT as Input for ACK
        nop
        nop
        bsf     RAMCLK
        call    s4nop
        bcf     RAMCLK
;------------------- 120

        wtre    NUTPHI1         ; 39
;-------------------------------------------------------------------------------
        bcf     DATDIR
        clrf    PORTA
        goto    endwrite2
